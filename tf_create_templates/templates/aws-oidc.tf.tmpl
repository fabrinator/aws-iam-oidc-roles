%{ for key, value in all_accounts ~}
resource "aws_iam_openid_connect_provider" "oidc-github-${key}" {
  provider = aws.${key}
  url = "https://token.actions.githubusercontent.com"

  client_id_list = [
    "sts.amazonaws.com",
  ]

  thumbprint_list = ["ffffffffffffffffffffffffffffffffffffffff"]
}

resource "aws_iam_role" "oidc-github-${key}" {
  provider = aws.${key}
  name = "oidc-github-actions"
  managed_policy_arns = ["arn:aws:iam::aws:policy/AdministratorAccess"]
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRoleWithWebIdentity"
        Effect = "Allow"
        Sid    = ""
        Principal = {
          Federated = aws_iam_openid_connect_provider.oidc-github-${key}.arn
        }
        Condition = {
          "StringEquals" = {
            "token.actions.githubusercontent.com:aud" = "sts.amazonaws.com"
          },
          "StringLike" = {
            "token.actions.githubusercontent.com:sub" = "repo:fabrinator/*"
          }
        }
      },
    ]
  })

  tags = {
    Managed = "Terraform"
  }
}

output "arn-${key}" {
  value = aws_iam_role.oidc-github-${key}.arn
}
%{ endfor ~}